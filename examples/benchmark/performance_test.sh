#!/bin/bash

# –°–∫—Ä–∏–ø—Ç –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –≤—ã—Å–æ–∫–∏—Ö –Ω–∞–≥—Ä—É–∑–æ–∫ SAI-Service
# –ü–æ—Å—Ç–µ–ø–µ–Ω–Ω–æ–µ —É–≤–µ–ª–∏—á–µ–Ω–∏–µ –Ω–∞–≥—Ä—É–∑–∫–∏ –¥–ª—è –ø–æ–∏—Å–∫–∞ –ø—Ä–µ–¥–µ–ª–æ–≤ –ø—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª—å–Ω–æ—Å—Ç–∏

SERVICE_URL="http://localhost:8080"
RESULTS_DIR="./high_load_results_$(date +%Y%m%d_%H%M%S)"

mkdir -p "$RESULTS_DIR"

echo "üî• HIGH LOAD PERFORMANCE TESTING"
echo "================================="
echo "Service: $SERVICE_URL"
echo "Results: $RESULTS_DIR"
echo ""

# –ü—Ä–æ–≤–µ—Ä—è–µ–º –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç—å —Å–µ—Ä–≤–∏—Å–∞
if ! curl -s "$SERVICE_URL/health" > /dev/null; then
    echo "‚ùå Service is not available"
    exit 1
fi

echo "‚úÖ Service is running, starting high load tests..."
echo ""

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –∑–∞–ø—É—Å–∫–∞ —Ç–µ—Å—Ç–∞ —Å –¥–µ—Ç–∞–ª—å–Ω—ã–º –≤—ã–≤–æ–¥–æ–º
run_load_test() {
    local test_name=$1
    local duration=$2
    local connections=$3
    local qps=$4
    local endpoint=$5

    echo "üöÄ Testing: $test_name"
    echo "   Duration: ${duration}s, Connections: $connections, QPS: $qps"
    echo "   Endpoint: $endpoint"

    local output_file="$RESULTS_DIR/${test_name}.txt"

    if [ "$qps" = "0" ]; then
        # Unlimited QPS
        hey -z ${duration}s -c $connections "$SERVICE_URL$endpoint" > "$output_file"
    else
        # Limited QPS
        hey -z ${duration}s -c $connections -q $qps "$SERVICE_URL$endpoint" > "$output_file"
    fi

    # –ò–∑–≤–ª–µ–∫–∞–µ–º –∫–ª—é—á–µ–≤—ã–µ –º–µ—Ç—Ä–∏–∫–∏
    local rps=$(grep "Requests/sec:" "$output_file" | awk '{print $2}')
    local avg_latency=$(grep "Average:" "$output_file" | awk '{print $2}')
    local p99_latency=$(grep "99% in" "$output_file" | awk '{print $3}')
    local success_rate=$(grep -c "200" "$output_file")
    local total_requests=$(grep "Total:" "$output_file" | head -1 | awk '{print $2}')

    echo "   üìä Results: RPS=$rps, Avg=${avg_latency}, P99=${p99_latency}, Success=${success_rate}/${total_requests}"
    echo ""

    # –°–æ—Ö—Ä–∞–Ω—è–µ–º –∫—Ä–∞—Ç–∫—É—é —Å–≤–æ–¥–∫—É
    echo "$test_name: RPS=$rps, Avg=$avg_latency, P99=$p99_latency" >> "$RESULTS_DIR/summary.txt"
}

# 1. –°–ï–†–ò–Ø –¢–ï–°–¢–û–í –° –£–í–ï–õ–ò–ß–ï–ù–ò–ï–ú CONNECTIONS
echo "=== PHASE 1: SCALING CONNECTIONS (unlimited QPS) ==="

run_load_test "connections_100" 30 100 0 "/ping"
run_load_test "connections_300" 30 300 0 "/ping"
run_load_test "connections_500" 30 500 0 "/ping"
run_load_test "connections_1000" 30 1000 0 "/ping"
run_load_test "connections_2000" 30 2000 0 "/ping"
run_load_test "connections_3000" 30 3000 0 "/ping"
run_load_test "connections_5000" 30 5000 0 "/ping"

echo "=== PHASE 2: EXTREME CONNECTIONS TEST ==="

# –≠–∫—Å—Ç—Ä–µ–º–∞–ª—å–Ω—ã–µ —Ç–µ—Å—Ç—ã (–æ—Å—Ç–æ—Ä–æ–∂–Ω–æ!)
run_load_test "extreme_10k_connections" 20 10000 0 "/ping"
run_load_test "extreme_20k_connections" 15 20000 0 "/ping"

echo "=== PHASE 3: HIGH QPS WITH MODERATE CONNECTIONS ==="

# –¢–µ—Å—Ç—ã —Å –≤—ã—Å–æ–∫–∏–º QPS
run_load_test "high_qps_50k" 30 500 50000 "/ping"
run_load_test "high_qps_100k" 30 1000 100000 "/ping"
run_load_test "high_qps_200k" 30 1000 200000 "/ping"
run_load_test "high_qps_unlimited" 30 1000 0 "/ping"

echo "=== PHASE 4: DIFFERENT ENDPOINTS UNDER HIGH LOAD ==="

# –¢–µ—Å—Ç–∏—Ä—É–µ–º —Ä–∞–∑–Ω—ã–µ —ç–Ω–¥–ø–æ–∏–Ω—Ç—ã –ø–æ–¥ –≤—ã—Å–æ–∫–æ–π –Ω–∞–≥—Ä—É–∑–∫–æ–π
run_load_test "hello_high_load" 30 1000 0 "/hello/loadtest"
run_load_test "data_high_load" 30 500 0 "/data"

# POST –∑–∞–ø—Ä–æ—Å—ã –ø–æ–¥ –Ω–∞–≥—Ä—É–∑–∫–æ–π
echo "üîÑ Testing POST endpoint under high load..."
echo '{"name":"loadtest","data":"high_load_data"}' | hey -z 30s -c 1000 -m POST -T "application/json" -D /dev/stdin "$SERVICE_URL/echo" > "$RESULTS_DIR/post_high_load.txt"

echo "=== PHASE 5: ENDURANCE TESTS ==="

# –î–ª–∏—Ç–µ–ª—å–Ω—ã–µ —Ç–µ—Å—Ç—ã —Å—Ç–∞–±–∏–ª—å–Ω–æ—Å—Ç–∏
run_load_test "endurance_5min" 300 1000 0 "/ping"
echo "‚è∞ Running 10-minute endurance test..."
run_load_test "endurance_10min" 600 500 0 "/ping"

echo "=== PHASE 6: RESOURCE EXHAUSTION TESTS ==="

# –ü–æ–ø—ã—Ç–∫–∏ –∏—Å—á–µ—Ä–ø–∞—Ç—å —Ä–µ—Å—É—Ä—Å—ã
echo "üî• Attempting to exhaust server resources..."
echo "WARNING: These tests may impact system stability!"
echo ""

# –û—á–µ–Ω—å –≤—ã—Å–æ–∫–∏–µ –Ω–∞–≥—Ä—É–∑–∫–∏ (–±—É–¥—å—Ç–µ –æ—Å—Ç–æ—Ä–æ–∂–Ω—ã!)
run_load_test "resource_test_1" 10 50000 0 "/ping"
run_load_test "resource_test_2" 10 100000 0 "/ping"

echo ""
echo "üèÅ HIGH LOAD TESTING COMPLETED!"
echo "================================"
echo ""

# –ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º —Å–≤–æ–¥–Ω—ã–π –æ—Ç—á–µ—Ç
echo "üìä PERFORMANCE ANALYSIS:"
echo "========================"

echo "Connection Scaling Results:"
grep "connections_" "$RESULTS_DIR/summary.txt" | while read line; do
    echo "  $line"
done

echo ""
echo "High QPS Results:"
grep "qps_" "$RESULTS_DIR/summary.txt" | while read line; do
    echo "  $line"
done

echo ""
echo "Endurance Results:"
grep "endurance_" "$RESULTS_DIR/summary.txt" | while read line; do
    echo "  $line"
done

echo ""
echo "üîç RECOMMENDATIONS:"
echo "==================="

# –ê–Ω–∞–ª–∏–∑ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤ –¥–ª—è —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–π
BEST_RPS=$(grep "RPS=" "$RESULTS_DIR/summary.txt" | sed 's/.*RPS=\([0-9.]*\).*/\1/' | sort -nr | head -1)
echo "‚Ä¢ Maximum observed RPS: $BEST_RPS"

# –ü—Ä–æ–≤–µ—Ä—è–µ–º, –≥–¥–µ –Ω–∞—á–∏–Ω–∞–µ—Ç—Å—è –¥–µ–≥—Ä–∞–¥–∞—Ü–∏—è
echo "‚Ä¢ Check detailed results in: $RESULTS_DIR/"
echo "‚Ä¢ Look for latency spikes and error rates in individual test files"
echo "‚Ä¢ Compare P99 latencies across different connection counts"

echo ""
echo "üí° SYSTEM OPTIMIZATION TIPS:"
echo "============================"
echo "If you're hitting limits, try:"
echo "‚Ä¢ ulimit -n 1000000  # Increase file descriptor limit"
echo "‚Ä¢ echo 'net.core.somaxconn = 65536' | sudo tee -a /etc/sysctl.conf"
echo "‚Ä¢ echo 'net.ipv4.tcp_max_syn_backlog = 30000' | sudo tee -a /etc/sysctl.conf"
echo "‚Ä¢ echo 'net.core.netdev_max_backlog = 30000' | sudo tee -a /etc/sysctl.conf"
echo "‚Ä¢ sudo sysctl -p"
echo ""
echo "Go optimizations:"
echo "‚Ä¢ export GOMAXPROCS=\$(nproc)"
echo "‚Ä¢ export GOGC=50  # More aggressive GC"
echo ""

echo "üìÅ All results saved to: $RESULTS_DIR"